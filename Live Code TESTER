// Test Code for POS Payment System
function testPOSConnection() {
    console.log('Starting POS test...');

    // Simulating the card number, expiration date, and security code being entered into the system
    const testCard = {
        cardNumber: '1234 5678 9012 3456',
        expDate: '12/25',
        securityCode: '123',
        balance: 100.00
    };

    // Simulate a call to the POS system to check if the card is valid
    console.log('Testing card info: ', testCard);
    simulateCardValidation(testCard)
        .then(response => {
            console.log('Card validated successfully: ', response);
            // If valid, test updating balance
            updatePOSBalance(testCard.balance);
        })
        .catch(error => {
            console.error('Error validating card: ', error);
        });
}

// Simulate card validation (this would typically involve a call to the payment network API)
function simulateCardValidation(card) {
    return new Promise((resolve, reject) => {
        // For test purposes, assuming the card number exists in the system
        const isValid = card.cardNumber === '1234 5678 9012 3456';
        if (isValid) {
            resolve('Card is valid');
        } else {
            reject('Invalid card');
        }
    });
}

// Function to simulate updating balance in the POS system
function updatePOSBalance(balance) {
    console.log('Updating balance in POS system...');

    // Example of a mock API request to update balance in the system
    fetch('/api/update-balance', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ balance: balance })
    })
    .then(response => response.json())
    .then(data => {
        console.log('Balance updated in POS system: ', data);
    })
    .catch(error => {
        console.error('Error updating balance in POS system: ', error);
    });
}

// Run the test
testPOSConnection();
